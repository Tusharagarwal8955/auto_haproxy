- hosts: localhost
  vars:
      ip: x['instances'][0]['public_ip_address']
  tasks:
  - ec2_instance:
     region: ap-south-1
     image_id: ami-068d43a544160b7ef
     instance_type: t2.micro
     vpc_subnet_id: subnet-2e47a145
     security_group: sg-0ad7fdafb3793202d
     key_name: (Key_name)
     name: oslr1
     aws_access_key: (aws_access_key)
     aws_secret_key: (aws_secret_key)
     state: present
    register: x
  - ec2_instance:
     region: ap-south-1
     image_id: ami-068d43a544160b7ef
     instance_type: t2.micro
     vpc_subnet_id: subnet-2e47a145
     security_group: sg-0ad7fdafb3793202d
     key_name: (Key_name)
     name: oslr2
     aws_access_key: (aws_access_key)
     aws_secret_key: (aws_secret_key)
     state: present

    register: y
  - ec2_instance:
     region: ap-south-1
     image_id: ami-068d43a544160b7ef
     instance_type: t2.micro
     vpc_subnet_id: subnet-2e47a145
     security_group: sg-0ad7fdafb3793202d
     key_name: ()
     name: oslr3
     aws_access_key: (aws_access_key)
     aws_secret_key: (aws_secret_key)
     state: present

    register: z


  - debug:
     var : x
  - debug:
     var: x['instances'][0]['public_ip_address']

  - lineinfile:
     path: "ip.txt"
     insertbefore: [aws_ip_lb]
     line: "{{ x['instances'][0]['public_ip_address'] }} ansible_connection=ssh ansible_user=ec2-user ansible_ssh_private_key_file=/root/nitinawskey_BOB.pem"
  - blockinfile:
     path: "ip.txt"
     insertafter: [aws_ip_webserver]
     block: |
          {{y['instances'][0]['public_ip_address']}} ansible_connection=ssh ansible_user=ec2-user ansible_ssh_private_key_file=/root/nitinawskey_BOB.pem
          {{z['instances'][0]['public_ip_address']}} ansible_connection=ssh ansible_user=ec2-user ansible_ssh_private_key_file=/root/nitinawskey_BOB.pem
  - meta: refresh_inventory
- hosts: aws_ip_lb
  tasks:
  
  - package:
     name: "haproxy"
     state: present
  - template:
     src: "haproxy1.cfg"
     dest: "/etc/haproxy/haproxy.cfg"
  - service:
     name: "haproxy"
     state: restarted
- hosts: aws_ip_webserver
  tasks:
  - package:
     name: "httpd"
     state: present
  - package:
     name: "php"
     state: present
  - copy:
     src: "task12a.php"
     dest: "/var/www/html/index.php"
  - service:
     name: "httpd"
     state: restarted

